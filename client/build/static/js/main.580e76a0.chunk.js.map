{"version":3,"sources":["components/layout/spinner.gif","context/auth/authContext.js","context/contact/contactContext.js","components/layout/Navbar.js","components/layout/Spinner.js","components/contacts/ContactItem.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","context/alert/alertContext.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alerts.js","components/routing/PrivateRoute.js","context/contact/contactReducer.js","context/types.js","context/contact/ContactState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","authContext","createContext","contactContext","Navbar","title","icon","useContext","AuthContext","ContactContext","isAuthenticated","logout","user","clearContacts","authLinks","to","name","href","onClick","className","guestLinks","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","ContactItem","contact","deleteContact","setCurrent","clearCurrent","_id","email","phone","type","float","charAt","toUpperCase","slice","Contacts","contacts","filtered","loading","getContacts","useEffect","length","TransitionGroup","map","CSSTransition","key","timeout","classNames","ContactForm","addContact","updateContact","current","setContact","useState","onChange","e","target","value","clearAll","onSubmit","preventDefault","placeholder","checked","ContactFilter","filterContacts","clearFilter","text","useRef","ref","Home","loadUser","About","alertContext","Register","props","AlertContext","setAlert","register","error","clearErrors","history","push","password","password2","setUser","htmlFor","required","minLength","Login","login","Alerts","alerts","alert","id","msg","PrivateRoute","Component","component","rest","console","log","render","state","action","payload","filter","regex","RegExp","match","ContactState","useReducer","contactReducer","dispatch","a","axios","get","res","data","response","config","headers","post","delete","put","Provider","children","localStorage","setItem","token","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","authReducer","formData","AlertState","alertReducer","uuid","setTimeout","App","exact","path","ReactDOM","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,qJCI5BC,EAFKC,0BCELC,EAFQD,0BCIjBE,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjBL,EAAcM,qBAAWC,GACzBL,EAAiBI,qBAAWE,GAE1BC,EAAkCT,EAAlCS,gBAAiBC,EAAiBV,EAAjBU,OAAQC,EAASX,EAATW,KACzBC,EAAkBV,EAAlBU,cAOFC,EACJ,kBAAC,WAAD,KACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,UAAT,UAEF,qCAAWH,GAAQA,EAAKI,MACxB,4BACE,uBAAGC,KAAK,KAAKC,QAZF,WACfP,IACAE,MAWM,uBAAGM,UAAU,wBACb,0BAAMA,UAAU,WAAhB,cAMFC,EACJ,kBAAC,WAAD,KACE,4BACE,kBAAC,IAAD,CAAML,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAKN,OACE,yBAAKI,UAAU,qBACb,4BACE,uBAAGA,UAAWb,IADhB,IAC0BD,GAE1B,4BAAKK,EAAkBI,EAAYM,KAUzChB,EAAOiB,aAAe,CACpBhB,MAAO,iBACPC,KAAM,sBAGOF,Q,iCCnDAkB,EAVQ,kBACrB,kBAAC,WAAD,KACE,yBACEC,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,aCoDzCC,EAxDK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf5B,EAAiBI,qBAAWE,GAE1BuB,EAA4C7B,EAA5C6B,cAAeC,EAA6B9B,EAA7B8B,WAAYC,EAAiB/B,EAAjB+B,aAC3BC,EAAkCJ,EAAlCI,IAAKnB,EAA6Be,EAA7Bf,KAAMoB,EAAuBL,EAAvBK,MAAOC,EAAgBN,EAAhBM,MAAOC,EAASP,EAATO,KAOjC,OACE,yBAAKnB,UAAU,iBACb,wBAAIA,UAAU,0BACXH,EAAM,IACP,0BACEU,MAAO,CAAEa,MAAO,UAChBpB,UACE,UACU,iBAATmB,EAA0B,gBAAkB,kBAG9CA,EAAKE,OAAO,GAAGC,cAAgBH,EAAKI,MAAM,KAG/C,wBAAIvB,UAAU,QACXiB,GACC,4BACE,uBAAGjB,UAAU,yBADf,IAC4CiB,GAG7CC,GACC,4BACE,uBAAGlB,UAAU,iBADf,IACoCkB,IAIxC,2BACE,4BACElB,UAAU,sBACVD,QAAS,kBAAMe,EAAWF,KAF5B,QAMA,4BAAQZ,UAAU,wBAAwBD,QAtC/B,WACfc,EAAcG,GACdD,MAoCI,aCGOS,EA7CE,WACf,IAAMxC,EAAiBI,qBAAWE,GAE1BmC,EAA6CzC,EAA7CyC,SAAUC,EAAmC1C,EAAnC0C,SAAUC,EAAyB3C,EAAzB2C,QAASC,EAAgB5C,EAAhB4C,YAOrC,OALAC,qBAAU,WACRD,MAEC,IAEc,OAAbH,GAAyC,IAApBA,EAASK,QAAiBH,EAKjD,kBAAC,WAAD,KACgB,OAAbF,GAAsBE,EAuBrB,kBAAC,EAAD,MAtBA,kBAACI,EAAA,EAAD,KACgB,OAAbL,EACGA,EAASM,KAAI,SAACpB,GAAD,OACX,kBAACqB,EAAA,EAAD,CACEC,IAAKtB,EAAQI,IACbmB,QAAS,IACTC,WAAW,QAEX,kBAAC,EAAD,CAAaxB,QAASA,QAG1Ba,EAASO,KAAI,SAACpB,GAAD,OACX,kBAACqB,EAAA,EAAD,CACEC,IAAKtB,EAAQI,IACbmB,QAAS,IACTC,WAAW,QAEX,kBAAC,EAAD,CAAaxB,QAASA,UAvB7B,qD,sBC0FIyB,EAxGK,WAClB,IAAMrD,EAAiBI,qBAAWE,GAE1BgD,EAAqDtD,EAArDsD,WAAYC,EAAyCvD,EAAzCuD,cAAeC,EAA0BxD,EAA1BwD,QAASzB,EAAiB/B,EAAjB+B,aAE5Cc,qBAAU,WAENY,EADc,OAAZD,EACSA,EAEA,CACT3C,KAAM,GACNoB,MAAO,GACPC,MAAO,GACPC,KAAM,eAGT,CAACnC,EAAgBwD,IAhBI,MAkBME,mBAAS,CACrC7C,KAAM,GACNoB,MAAO,GACPC,MAAO,GACPC,KAAM,aAtBgB,mBAkBjBP,EAlBiB,KAkBR6B,EAlBQ,KAyBhB5C,EAA6Be,EAA7Bf,KAAMoB,EAAuBL,EAAvBK,MAAOC,EAAgBN,EAAhBM,MAAOC,EAASP,EAATO,KAEtBwB,EAAW,SAACC,GAAD,OACfH,EAAW,eAAK7B,EAAN,eAAgBgC,EAAEC,OAAOhD,KAAO+C,EAAEC,OAAOC,UAY/CC,EAAW,WACfhC,KAEF,OACE,0BAAMiC,SAdS,SAACJ,GAChBA,EAAEK,iBACc,OAAZT,EACFF,EAAW1B,GAEX2B,EAAc3B,GAEhBmC,MAQE,wBAAI/C,UAAU,gBACXwC,EAAU,eAAiB,eAE9B,2BACErB,KAAK,OACL+B,YAAY,OACZrD,KAAK,OACLiD,MAAOjD,EACP8C,SAAUA,IAEZ,2BACExB,KAAK,QACL+B,YAAY,QACZrD,KAAK,QACLiD,MAAO7B,EACP0B,SAAUA,IAEZ,2BACExB,KAAK,OACL+B,YAAY,QACZrD,KAAK,QACLiD,MAAO5B,EACPyB,SAAUA,IAEZ,4CACA,2BACExB,KAAK,QACLtB,KAAK,OACLiD,MAAM,WACNK,QAAkB,aAAThC,EACTwB,SAAUA,IA/Bd,WAiCW,IACT,2BACExB,KAAK,QACLtB,KAAK,OACLiD,MAAM,eACNK,QAAkB,iBAAThC,EACTwB,SAAUA,IAvCd,eAyCe,IACb,6BACE,2BACExB,KAAK,SACL2B,MAAON,EAAU,iBAAmB,cACpCxC,UAAU,+BAGbwC,GACC,6BACE,4BAAQxC,UAAU,0BAA0BD,QAASgD,GAArD,YC/DKK,EAhCO,WACpB,IAAMpE,EAAiBI,qBAAWE,GAE1B+D,EAA0CrE,EAA1CqE,eAAgBC,EAA0BtE,EAA1BsE,YAAa5B,EAAa1C,EAAb0C,SAE/B6B,EAAOC,iBAAO,IAEpB3B,qBAAU,WACS,OAAbH,IACF6B,EAAKf,QAAQM,MAAQ,OAWzB,OACE,8BACE,2BACEW,IAAKF,EACLpC,KAAK,OACL+B,YAAY,qBACZP,SAbW,SAACC,GACW,KAAvBW,EAAKf,QAAQM,MACfO,EAAeT,EAAEC,OAAOC,OAExBQ,SCQSI,EArBF,WACX,IAAM5E,EAAcM,qBAAWC,GAO/B,OALAwC,qBAAU,WACR/C,EAAY6E,aAEX,IAGD,yBAAK3D,UAAU,UACb,6BACE,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCNO4D,EAdD,WACZ,OACE,6BACE,qCACA,uBAAG5D,UAAU,QAAb,uDAGA,uBAAGA,UAAU,aACX,6CADF,YCLS6D,EAFM9E,0BC4GN+E,EA1GE,SAACC,GAChB,IAAMF,EAAezE,qBAAW4E,GAC1BlF,EAAcM,qBAAWC,GAEvB4E,EAAaJ,EAAbI,SACAC,EAAkDpF,EAAlDoF,SAAUC,EAAwCrF,EAAxCqF,MAAOC,EAAiCtF,EAAjCsF,YAAa7E,EAAoBT,EAApBS,gBAEtCsC,qBAAU,WACJtC,GACFwE,EAAMM,QAAQC,KAAK,KAGP,wBAAVH,IACFF,EAASE,EAAO,UAChBC,OAED,CAACD,EAAO5E,EAAiBwE,EAAMM,QAASJ,EAAUG,IAhB3B,MAkBF1B,mBAAS,CAC/B7C,KAAM,GACNoB,MAAO,GACPsD,SAAU,GACVC,UAAW,KAtBa,mBAkBnB/E,EAlBmB,KAkBbgF,EAlBa,KAyBlB5E,EAAqCJ,EAArCI,KAAMoB,EAA+BxB,EAA/BwB,MAAOsD,EAAwB9E,EAAxB8E,SAAUC,EAAc/E,EAAd+E,UAEzB7B,EAAW,SAACC,GAAD,OACf6B,EAAQ,eACHhF,EADE,eAEJmD,EAAEC,OAAOhD,KAAO+C,EAAEC,OAAOC,UAkB9B,OACE,yBAAK9C,UAAU,kBACb,uCACU,0BAAMA,UAAU,gBAAhB,aAEV,0BAAMgD,SApBO,SAACJ,GAChBA,EAAEK,iBACW,KAATpD,GAAyB,KAAVoB,GAA6B,KAAbsD,EACjCN,EAAS,0BAA2B,UAC3BM,IAAaC,EACtBP,EAAS,yBAA0B,UAEnCC,EAAS,CACPrE,OACAoB,QACAsD,eAWA,yBAAKvE,UAAU,cACb,2BAAO0E,QAAQ,QAAf,QACA,2BACEvD,KAAK,OACLtB,KAAK,OACLiD,MAAOjD,EACP8C,SAAUA,EACVgC,UAAQ,KAGZ,yBAAK3E,UAAU,cACb,2BAAO0E,QAAQ,SAAf,iBACA,2BACEvD,KAAK,QACLtB,KAAK,QACLiD,MAAO7B,EACP0B,SAAUA,EACVgC,UAAQ,KAGZ,yBAAK3E,UAAU,cACb,2BAAO0E,QAAQ,YAAf,YACA,2BACEvD,KAAK,WACLtB,KAAK,WACLiD,MAAOyB,EACP5B,SAAUA,EACVgC,UAAQ,EACRC,UAAU,OAGd,yBAAK5E,UAAU,cACb,2BAAO0E,QAAQ,aAAf,oBACA,2BACEvD,KAAK,WACLtB,KAAK,YACLiD,MAAO0B,EACP7B,SAAUA,EACVgC,UAAQ,EACRC,UAAU,OAGd,2BACEzD,KAAK,SACL2B,MAAM,WACN9C,UAAU,iCCnBL6E,EAhFD,SAACd,GACb,IAAMF,EAAezE,qBAAW4E,GAC1BlF,EAAcM,qBAAWC,GAEvB4E,EAAaJ,EAAbI,SACAa,EAA+ChG,EAA/CgG,MAAOX,EAAwCrF,EAAxCqF,MAAOC,EAAiCtF,EAAjCsF,YAAa7E,EAAoBT,EAApBS,gBAEnCsC,qBAAU,WACJtC,GACFwE,EAAMM,QAAQC,KAAK,KAGP,wBAAVH,IACFF,EAASE,EAAO,UAChBC,OAGD,CAACD,EAAO5E,EAAiBwE,EAAMM,UAjBX,MAmBC3B,mBAAS,CAC/BzB,MAAO,GACPsD,SAAU,KArBW,mBAmBhB9E,EAnBgB,KAmBVgF,EAnBU,KAwBfxD,EAAoBxB,EAApBwB,MAAOsD,EAAa9E,EAAb8E,SAET5B,EAAW,SAACC,GAAD,OACf6B,EAAQ,eACHhF,EADE,eAEJmD,EAAEC,OAAOhD,KAAO+C,EAAEC,OAAOC,UAe9B,OACE,yBAAK9C,UAAU,kBACb,uCACU,0BAAMA,UAAU,gBAAhB,kBAEV,0BAAMgD,SAjBO,SAACJ,GAChBA,EAAEK,iBACY,KAAVhC,GAA6B,KAAbsD,EAClBN,EAAS,4BAA6B,UAEtCa,EAAM,CACJ7D,QACAsD,eAWA,yBAAKvE,UAAU,cACb,2BAAO0E,QAAQ,SAAf,iBACA,2BACEvD,KAAK,QACLtB,KAAK,QACLiD,MAAO7B,EACP0B,SAAUA,EACVgC,UAAQ,KAGZ,yBAAK3E,UAAU,cACb,2BAAO0E,QAAQ,YAAf,YACA,2BACEvD,KAAK,WACLtB,KAAK,WACLiD,MAAOyB,EACP5B,SAAUA,EACVgC,UAAQ,KAGZ,2BACExD,KAAK,SACL2B,MAAM,QACN9C,UAAU,iCC7DL+E,EAbA,WACb,IAAMlB,EAAezE,qBAAW4E,GAEhC,OACEH,EAAamB,OAAOlD,OAAS,GAC7B+B,EAAamB,OAAOhD,KAAI,SAACiD,GAAD,OACtB,yBAAK/C,IAAK+C,EAAMC,GAAIlF,UAAS,sBAAiBiF,EAAM9D,OAClD,uBAAGnB,UAAU,uBADf,IACwCiF,EAAME,S,QCarCC,EAnBM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACpDzG,EAAcM,qBAAWC,GACvBE,EAA6BT,EAA7BS,gBAAiBoC,EAAY7C,EAAZ6C,QAGzB,OADA6D,QAAQC,IAAIlG,EAAiBoC,GAE3B,kBAAC,IAAD,iBACM4D,EADN,CAEEG,OAAQ,SAAC3B,GAAD,OACLxE,GAAoBoC,EAGnB,kBAAC0D,EAActB,GAFf,kBAAC,IAAD,CAAUnE,GAAG,gB,gDCDR,WAAC+F,EAAOC,GACrB,OAAQA,EAAOzE,MACb,ICfwB,eDgBtB,OAAO,eACFwE,EADL,CAEElE,SAAUmE,EAAOC,QACjBlE,SAAS,IAEb,ICnBuB,cDoBrB,OAAO,eACFgE,EADL,CAEElE,SAAS,CAAEmE,EAAOC,SAAV,mBAAsBF,EAAMlE,WACpCE,SAAS,IAEb,ICrB0B,iBDsBxB,OAAO,eACFgE,EADL,CAEElE,SAAUkE,EAAMlE,SAASO,KAAI,SAACpB,GAAD,OAC3BA,EAAQI,MAAQ4E,EAAOC,QAAQ7E,IAAM4E,EAAOC,QAAUjF,KAExDe,SAAS,IAEb,IChC0B,iBDiCxB,OAAO,eACFgE,EADL,CAEElE,SAAUkE,EAAMlE,SAASqE,QACvB,SAAClF,GAAD,OAAaA,EAAQI,MAAQ4E,EAAOC,WAEtClE,SAAS,IAEb,IC1C0B,iBD2CxB,OAAO,eACFgE,EADL,CAEElE,SAAU,KACVC,SAAU,KACVyC,MAAO,KACP3B,QAAS,OAEb,IC/CuB,cDgDrB,OAAO,eACFmD,EADL,CAEEnD,QAASoD,EAAOC,UAEpB,ICnDyB,gBDoDvB,OAAO,eACFF,EADL,CAEEnD,QAAS,OAEb,ICtD2B,kBDuDzB,OAAO,eACFmD,EADL,CAEEjE,SAAUiE,EAAMlE,SAASqE,QAAO,SAAClF,GAC/B,IAAMmF,EAAQ,IAAIC,OAAJ,UAAcJ,EAAOC,SAAW,MAC9C,OAAOjF,EAAQf,KAAKoG,MAAMF,IAAUnF,EAAQK,MAAMgF,MAAMF,QAG9D,IC7DwB,eD8DtB,OAAO,eACFJ,EADL,CAEEjE,SAAU,OAEd,IC/DyB,gBDgEvB,OAAO,eACFiE,EADL,CAEExB,MAAOyB,EAAOC,UAElB,QACE,OAAOF,IE6EEO,EA5IM,SAACnC,GACpB,IAD8B,EAQJoC,qBAAWC,EAPhB,CACnB3E,SAAU,KACVe,QAAS,KACTd,SAAU,KACVyC,MAAO,OALqB,mBAQvBwB,EARuB,KAQhBU,EARgB,KAWxBzE,EAAW,uCAAG,4BAAA0E,EAAA,+EAEEC,IAAMC,IAAI,iBAFZ,OAEVC,EAFU,OAGhBJ,EAAS,CACPlF,KDhCoB,eCiCpB0E,QAASY,EAAIC,OALC,gDAQhBL,EAAS,CACPlF,KD1BqB,gBC2BrB0E,QAAS,KAAIc,SAASxB,MAVR,yDAAH,qDAgBX7C,EAAU,uCAAG,WAAO1B,GAAP,iBAAA0F,EAAA,6DACXM,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHH,kBAQGN,IAAMO,KAAK,gBAAiBlG,EAASgG,GARxC,OAQTH,EARS,OASfJ,EAAS,CACPlF,KDpDmB,cCqDnB0E,QAASY,EAAIC,OAXA,gDAcfL,EAAS,CACPlF,KDhDqB,gBCiDrB0E,QAAS,KAAIc,SAASxB,MAhBT,yDAAH,sDAsBVtE,EAAa,uCAAG,WAAOqE,GAAP,SAAAoB,EAAA,+EAEZC,IAAMQ,OAAN,wBAA8B7B,IAFlB,OAGlBmB,EAAS,CACPlF,KDnEsB,iBCoEtB0E,QAASX,IALO,+CAQlBmB,EAAS,CACPlF,KDhEqB,gBCiErB0E,QAAS,KAAIc,SAASxB,MAVN,OAcpBkB,EAAS,CAAElF,KD7Ee,iBC6EO0E,QAASX,IAdtB,yDAAH,sDAiCb3C,EAAa,uCAAG,WAAO3B,GAAP,iBAAA0F,EAAA,6DACdM,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHA,kBAQAN,IAAMS,IAAN,wBACCpG,EAAQI,KACzBJ,EACAgG,GAXgB,OAQZH,EARY,OAalBJ,EAAS,CACPlF,KD3GsB,iBC4GtB0E,QAASY,EAAIC,OAfG,gDAkBlBL,EAAS,CACPlF,KD3GqB,gBC4GrB0E,QAAS,KAAIc,SAASxB,MApBN,yDAAH,sDAmCnB,OACE,kBAAC,EAAe8B,SAAhB,CACEnE,MAAO,CACLrB,SAAUkE,EAAMlE,SAChBe,QAASmD,EAAMnD,QACfd,SAAUiE,EAAMjE,SAChByC,MAAOwB,EAAMxB,MACb7B,aACAzB,gBACAC,WAtDa,SAACF,GAClByF,EAAS,CAAElF,KDtFY,cCsFO0E,QAASjF,KAsDnCG,aAlDe,WACnBsF,EAAS,CAAElF,KD1Fc,mBC4IrBoB,gBACAc,eArBiB,SAACE,GACtB8C,EAAS,CAAElF,KDvHgB,kBCuHO0E,QAAStC,KAqBvCD,YAjBc,WAClB+C,EAAS,CAAElF,KD3Ha,kBC4IpBS,cACAlC,cAjEgB,WACpB2G,EAAS,CAAElF,KDpFe,sBCuJvB4C,EAAMmD,WC7IE,WAACvB,EAAOC,GACrB,OAAQA,EAAOzE,MACb,IFCuB,cEArB,OAAO,eACFwE,EADL,CAEEpG,iBAAiB,EACjBoC,SAAS,EACTlC,KAAMmG,EAAOC,UAEjB,IFR4B,mBES5B,IFLyB,gBEOvB,OADAsB,aAAaC,QAAQ,QAASxB,EAAOC,QAAQwB,OACtC,eACF1B,EADL,GAEKC,EAAOC,QAFZ,CAGEtG,iBAAiB,EACjBoC,SAAS,IAEb,IFhByB,gBEiBzB,IFfsB,aEgBtB,IFdsB,aEetB,IFdkB,SEgBhB,OADAwF,aAAaG,WAAW,SACjB,eACF3B,EADL,CAEE0B,MAAO,KACP9H,iBAAiB,EACjBoC,SAAS,EACTlC,KAAM,KACN0E,MAAOyB,EAAOC,UAElB,IFvBwB,eEwBtB,OAAO,eACFF,EADL,CAEExB,MAAO,OAEX,QACE,OAAOwB,ICtCE4B,EARM,SAACF,GAChBA,EACFd,IAAMiB,SAASX,QAAQY,OAAO,gBAAkBJ,SAEzCd,IAAMiB,SAASX,QAAQY,OAAO,iBCoH1BC,EAzGG,SAAC3D,GACjB,IAAM4D,EAAe,CACnBN,MAAOF,aAAaS,QAAQ,SAC5BrI,gBAAiB,KACjBoC,SAAS,EACTwC,MAAO,KACP1E,KAAM,MANmB,EASD0G,qBAAW0B,EAAaF,GATvB,mBASpBhC,EAToB,KASbU,EATa,KAYrB1C,EAAQ,uCAAG,4BAAA2C,EAAA,6DACXa,aAAaE,OACfE,EAAaJ,aAAaE,OAFb,kBAMKd,IAAMC,IAAI,aANf,OAMPC,EANO,OAQbJ,EAAS,CACPlF,KJxBmB,cIyBnB0E,QAASY,EAAIC,OAVF,gDAabL,EAAS,CACPlF,KJ5BkB,eIcP,yDAAH,qDAoBR+C,EAAQ,uCAAG,WAAO4D,GAAP,iBAAAxB,EAAA,6DACTM,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHL,kBAOKN,IAAMO,KAAK,aAAcgB,EAAUlB,GAPxC,OAOPH,EAPO,OASbJ,EAAS,CACPlF,KJ/CwB,mBIgDxB0E,QAASY,EAAIC,OAXF,gDAcbL,EAAS,CACPlF,KJnDqB,gBIoDrB0E,QAAS,KAAIc,SAASD,KAAKvB,MAhBhB,yDAAH,sDAsBRL,EAAK,uCAAG,WAAOgD,GAAP,iBAAAxB,EAAA,6DACNM,EAAS,CACbC,QAAS,CACP,eAAgB,qBAHR,kBAOQN,IAAMO,KAAK,YAAagB,EAAUlB,GAP1C,OAOJH,EAPI,OASVJ,EAAS,CACPlF,KJjEqB,gBIkErB0E,QAASY,EAAIC,OAGf/C,IAdU,gDAgBV0C,EAAS,CACPlF,KJvEkB,aIwElB0E,QAAS,KAAIc,SAASD,KAAKvB,MAlBnB,yDAAH,sDA+BX,OACE,kBAAC,EAAY8B,SAAb,CACEnE,MAAO,CACLuE,MAAO1B,EAAM0B,MACb9H,gBAAiBoG,EAAMpG,gBACvBoC,QAASgE,EAAMhE,QACflC,KAAMkG,EAAMlG,KACZ0E,MAAOwB,EAAMxB,MACbD,WACAP,WACAmB,QACAtF,OAlBS,kBAAM6G,EAAS,CAAElF,KJ7EZ,YIgGdiD,YAhBc,WAClBiC,EAAS,CAAElF,KJhFa,oBIkGrB4C,EAAMmD,W,QCnHE,WAACvB,EAAOC,GACrB,OAAQA,EAAOzE,MACb,ILKqB,YKJnB,MAAM,GAAN,mBAAWwE,GAAX,CAAkBC,EAAOC,UAC3B,ILIwB,eKHtB,OAAOF,EAAMG,QAAO,SAACb,GAAD,OAAWA,EAAMC,KAAOU,EAAOC,WACrD,QACE,OAAOF,ICyBEoC,EA5BI,SAAChE,GAClB,IAD4B,EAGFoC,qBAAW6B,EAFhB,IADO,mBAGrBrC,EAHqB,KAGdU,EAHc,KAgB5B,OACE,kBAAC,EAAaY,SAAd,CACEnE,MAAO,CACLkC,OAAQW,EACR1B,SAdW,SAACkB,EAAKhE,GAA0B,IAApBgB,EAAmB,uDAAT,IAC/B+C,EAAK+C,cACX5B,EAAS,CACPlF,KNNmB,YMOnB0E,QAAS,CAAEV,MAAKhE,OAAM+D,QAGxBgD,YAAW,kBAAM7B,EAAS,CAAElF,KNTJ,eMSwB0E,QAASX,MAAO/C,MAU7D4B,EAAMmD,W,MCTTC,aAAaE,OACfE,EAAaJ,aAAaE,OAG5B,IAyBec,EAzBH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAKnI,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,SAAS/C,UAAW1B,IACtC,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,YAAY/C,UAAWxB,IACzC,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,SAAS/C,UAAWT,IACtC,kBAAC,EAAD,CAAcuD,OAAK,EAACC,KAAK,IAAI/C,UAAW5B,YClC1D4E,IAAS5C,OAAO,kBAAC,EAAD,MAAS6C,SAASC,eAAe,W","file":"static/js/main.580e76a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.0d0345f6.gif\";","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { createContext } from 'react';\n\nconst contactContext = createContext();\n\nexport default contactContext;\n","import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Navbar = ({ title, icon }) => {\n  const authContext = useContext(AuthContext);\n  const contactContext = useContext(ContactContext);\n\n  const { isAuthenticated, logout, user } = authContext;\n  const { clearContacts } = contactContext;\n\n  const onLogout = () => {\n    logout();\n    clearContacts();\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>\n        <Link to='/about'>About</Link>\n      </li>\n      <li>Hello {user && user.name}</li>\n      <li>\n        <a href='#!' onClick={onLogout}>\n          <i className='fas fa-sign-out-alt'></i>\n          <span className='hide-sm'> Logout</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </Fragment>\n  );\n\n  return (\n    <div className='navbar bg-primary'>\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: 'Contact Keeper',\n  icon: 'fas fa-id-card-alt',\n};\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport const Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      alt='loading...'\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactItem = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\n  const { _id, name, email, phone, type } = contact;\n\n  const onDelete = () => {\n    deleteContact(_id);\n    clearCurrent();\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-primary text-left'>\n        {name}{' '}\n        <span\n          style={{ float: 'sright' }}\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n        >\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            <i className='fas fa-envelope-open'></i> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className='fas fa-phone'></i> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contact)}\n        >\n          Edit\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, loading, getContacts } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map((contact) => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames='item'\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))\n            : contacts.map((contact) => (\n                <CSSTransition\n                  key={contact._id}\n                  timeout={500}\n                  classNames='item'\n                >\n                  <ContactItem contact={contact} />\n                </CSSTransition>\n              ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, updateContact, current, clearCurrent } = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [contactContext, current]);\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? 'Edit Contact' : 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />\n      Professional{' '}\n      <div>\n        <input\n          type='submit'\n          value={current ? 'Update Contact' : 'Add Contact'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { filterContacts, clearFilter, filtered } = contactContext;\n\n  const text = useRef('');\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = (e) => {\n    if (text.current.value !== '') {\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n  return (\n    <form>\n      <input\n        ref={text}\n        type='text'\n        placeholder='Filter Contacts...'\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n","import React, { useContext, useEffect } from 'react';\nimport Contacts from '../contacts/Contacts';\nimport ContactForm from '../contacts/ContactForm';\nimport ContactFilter from '../contacts/ContactFilter';\n\nimport AuthContext from '../../context/auth/authContext';\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className='grid-2'>\n      <div>\n        <ContactForm />\n      </div>\n      <div>\n        <ContactFilter />\n        <Contacts />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About</h1>\n      <p className='my-1'>\n        This is a full stack React app for keepign contacts\n      </p>\n      <p className='bg-dark p'>\n        <strong>Version: </strong> 1.0.0\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n  }, [error, isAuthenticated, props.history, setAlert, clearErrors]);\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = user;\n\n  const onChange = (e) =>\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='name'>Name</label>\n          <input\n            type='text'\n            name='name'\n            value={name}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password2'>Confirm Password</label>\n          <input\n            type='password'\n            name='password2'\n            value={password2}\n            onChange={onChange}\n            required\n            minLength='6'\n          />\n        </div>\n        <input\n          type='submit'\n          value='Register'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Login = (props) => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n\n  const { setAlert } = alertContext;\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = user;\n\n  const onChange = (e) =>\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({\n        email,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Account Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <input\n          type='submit'\n          value='Login'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 &&\n    alertContext.alerts.map((alert) => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  console.log(isAuthenticated, loading);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        loading: false,\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const CLEAR_CONTACTS = 'CLEAR_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const CONTACT_ERROR = 'CONTACT_ERROR';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get Contacts\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Add Contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Delete Contact\n  const deleteContact = async (id) => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Clear Contacts\n  const clearContacts = () => {\n    dispatch({ type: CLEAR_CONTACTS });\n  };\n\n  // Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update Contact\n  const updateContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // Filter Contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n        getContacts,\n        clearContacts,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    }\n  };\n\n  // Register User\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Login User\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = (props) => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport About from './components/pages/About';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alerts from './components/layout/Alerts';\n\nimport PrivateRoute from './components/routing/PrivateRoute';\n\nimport ContactState from './context/contact/ContactState';\nimport AuthState from './context/auth/AuthState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <div className='container'>\n                <Alerts />\n                <Switch>\n                  <Route exact path='/about' component={About} />\n                  <Route exact path='/register' component={Register} />\n                  <Route exact path='/login' component={Login} />\n                  <PrivateRoute exact path='/' component={Home} />\n                </Switch>\n              </div>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </ContactState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}